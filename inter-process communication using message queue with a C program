#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/msg.h>

#define MAX_MSG_LEN 100
#define MSG_TYPE 1

struct message_buf {
    long mtype;
    char mtext[MAX_MSG_LEN];
};

int main(int argc, char *argv[])
{
    int msgid;
    key_t key;
    struct message_buf message;

    // Generate the key for the message queue
    key = ftok(".", 'a');
    if (key == -1) {
        perror("ftok");
        exit(1);
    }

    // Create the message queue
    msgid = msgget(key, IPC_CREAT | 0666);
    if (msgid == -1) {
        perror("msgget");
        exit(1);
    }

    // The first process sends a message to the queue
    message.mtype = MSG_TYPE;
    strcpy(message.mtext, "Hello, world!");
    if (msgsnd(msgid, &message, strlen(message.mtext) + 1, 0) == -1) {
        perror("msgsnd");
        exit(1);
    }
    printf("[Process 1] Message sent: %s\n", message.mtext);

    // The second process receives the message from the queue
    if (msgrcv(msgid, &message, MAX_MSG_LEN, MSG_TYPE, 0) == -1) {
        perror("msgrcv");
        exit(1);
    }
    printf("[Process 2] Message received: %s\n", message.mtext);

    // Remove the message queue
    if (msgctl(msgid, IPC_RMID, NULL) == -1) {
        perror("msgctl");
        exit(1);
    }

    return 0;
}
